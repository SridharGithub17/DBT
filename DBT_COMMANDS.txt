DBT COMMANDS:
-------------

** Initiate a DBT PROJECT:
DBT INIT PROJECT_NAME

**Once the profile file is set up run the below command to see if connection is successfull or not:
DBT DEBUG

**To push the file changes to github:
git remove add origin https://github.com/SridharGithub17/DBT.git

git remote --v  (checks if origin points to git rep)

Macros:
-------
No of macros are combined into package-our most popular package is dbt-utils.

DBT HUB PACKAGE: https://hub.getdbt.com/

To connect to existing repository:
git remote add origin rep_link


  - git: "https://github.com/SridharGithub17/DBT.git"
    revision: 0.1.21

  - local: /opt/dbt/redshift


  PR BUILD URL:
  https://github.com/SridharGithub17/DBT/compare/master..my-branch


--------------------------
Features tested:
1. Project created with DBT cloud 
	--> Connection setup
	--> DBT rep set up
	--> Integrating with github ** check it
2. Running sample models
3. Creating models to create models (materialized: view or table ) in snowflake
4. creating sub models ( stg, int, dim , fct)
5. creating models to load different models in same schema
6. Load modesl to the respective schema --In progress
7. Naming convetions:
	https://github.com/fishtown-analytics/corp/blob/master/dbt_coding_conventions.md
8. INSTALL PACKAGES

NOtes:
Variables defined with the --vars command line argument override variables defined in the dbt_project.yml file. They are globally scoped and will be accessible to all packages included in the project.

How to structure dbt projects:
https://discourse.getdbt.com/t/how-we-structure-our-dbt-projects/355

Naming conventions:
https://github.com/fishtown-analytics/corp/blob/master/dbt_coding_conventions.md

To upgrade dbt:
pip install --upgrade dbt
















